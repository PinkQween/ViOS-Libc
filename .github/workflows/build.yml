name: Build Libc

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies and cross-compiler
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y build-essential gcc-multilib g++-multilib nasm wget bison flex

          wget https://github.com/lordmilko/i686-elf-tools/releases/download/13.2.0/i686-elf-tools-linux.zip
          unzip i686-elf-tools-linux.zip -d i686-elf-tools
          sudo mv i686-elf-tools /usr/local/i686-elf-tools
          sudo ln -sf /usr/local/i686-elf-tools/bin/* /usr/local/bin/

          i686-elf-gcc --version
          i686-elf-ld --version
          nasm -v

      - name: Build library
        run: |
          make clean
          make

      - name: Run tests (if available)
        run: |
          # TODO: Add tests when implemented
          echo "Tests not yet implemented"

      - name: List build contents
        run: |
          echo "=== Build directory contents ==="
          ls -la build/
          echo "=== Library file details ==="
          ls -la build/libViOSlibc.a
          echo "=== Object files ==="
          find build/ -name "*.o" | head -10

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vios-libc-build
          path: |
            build/libViOSlibc.a
            build/src/
            build/crt/
          retention-days: 30

      - name: Upload headers
        uses: actions/upload-artifact@v4
        with:
          name: vios-libc-headers
          path: include/
          retention-days: 30

      - name: Create release packages
        if: github.event_name == 'release'
        run: |
          # Create a temporary directory for packaging
          mkdir -p release_package
          
          # Copy the library file
          cp build/libViOSlibc.a release_package/
          
          # Copy all header files with folder structure preserved
          cp -r include/ release_package/
          
          # List what we're packaging
          echo "=== Release package contents ==="
          ls -la release_package/
          echo "=== Include directory structure ==="
          find release_package/include/ -type f
          
          # Create zip file
          zip -r "ViOS Libc.zip" release_package/
          
          # Create tar.gz file
          tar -czf "ViOS-Libc.tar.gz" -C release_package .
          
          # Show file sizes
          echo "=== Package sizes ==="
          ls -lh "ViOS Libc.zip" "ViOS-Libc.tar.gz"

      - name: Upload release packages
        if: github.event_name == 'release'
        uses: actions/upload-artifact@v4
        with:
          name: ViOS-Libc-Release
          path: |
            "ViOS Libc.zip"
            ViOS-Libc.tar.gz
          retention-days: 90
